<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" creationComplete="init()" >
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import com.fwscott.webapis.smugmug.v1_2_0.SmugMugService;
			import mx.collections.XMLListCollection;
			import mx.collections.IViewCursor;
			import com.fwscott.webapis.smugmug.v1_2_0.events.SmugMugResultEvent;
			
			private var curs:IViewCursor;
			
			private var albumsToDelete:XMLListCollection;
			
			private var service:SmugMugService;
			
			private var fileRef:FileReference = new FileReference();
			
			private function init():void {
				service = new SmugMugService("rXcjRmeEXiGS6gkjWunJdLPVuUuwNkx4",false);
				service.addEventListener(SmugMugResultEvent.LOGIN_WITHPASSWORD, onLoginResult);
				service.addEventListener(SmugMugResultEvent.USERS_GETTREE, onUsersGetTree);
				service.addEventListener(SmugMugResultEvent.ALBUMS_GET, onAlbumsGet);
				service.addEventListener(SmugMugResultEvent.ALBUMS_DELETE, onAlbumDelete);
				service.addEventListener(SmugMugResultEvent.IMAGES_UPLOADFROMURL, onUploadFromURL);
				service.login.withPassword("emailaddress","password");
				fileRef.addEventListener(Event.SELECT,onFileSelect);
			}
			
			private function onAlbumsGet(event:SmugMugResultEvent):void {
				var tmp:ArrayCollection = new ArrayCollection(event.data.Albums);
				curs = tmp.createCursor();
				
			}
			private function onUploadFromURL(event:SmugMugResultEvent):void {
				trace(String(event.data.images));
			}
			private function onFileSelect(event:Event):void {
				service.images.upload(fileRef,curs.current.id,"test" + new Date().time.toString());
			}
			
			private function onLoginResult(event:SmugMugResultEvent):void {
				//service.users.getTree(null,true);
				service.albums.get();
			}

			private function onUsersGetTree(event:SmugMugResultEvent):void {
				albumsToDelete = new XMLListCollection(XML(event.data).Categories.Category.Albums.Album.(@Title=="For Testing API"));	
				curs = albumsToDelete.createCursor();
				//deleteNextAlbum();
			}
			
			private function deleteNextAlbum():void {
				if(!curs.afterLast)
					service.albums.deleteAlbum(curs.current.@id);				
			}
			private function onAlbumDelete(event:SmugMugResultEvent):void {
				if(event.success)
					curs.moveNext();
				else
					trace("didnt delete for some reason");
				deleteNextAlbum();
			}
		]]>
	</mx:Script>
	<mx:Button label="upload to album" click="fileRef.browse()" />
</mx:Application>
